\title{cs805 Assignment 1}
\author{
  Shulang Lei\\
  200253624\\
  Department of Computer Science\\
  University of Regina\\
}
\date{\today}

\documentclass[12pt]{article}
\setlength{\parindent}{0in}
\usepackage{graphicx}
\usepackage{mathtools}
\usepackage{amsthm}
\usepackage{parskip}
\usepackage{hyperref}

\begin{document}
\maketitle

\begin{abstract}
  This assignment is written in literate programming style, generated by noweb, and rendered by LaTex.
\end{abstract}

\section{Question 1}
Let $n$ be a 3 tuple vector, and given that it is along $V1$. It is trivial that  we can imply:
\[
        n = \frac{V1}{[|V1|,|V1|,|V1|]}
\]
where $|V1| = \sqrt{V1_x^2+V1_y^2+V1_z^2}$

Thus n is now known.

By the definition of cross product, denoted as $\times$ here, knowning that $V1$ and $V2$ is non-collinear, we can also derive:
\[
        u = \frac{V2 \times V3}{[|V2 \times V3|,|V2 \times V3|,|V2 \times V3|]}
\]

Finally, it is also trivial that:
\[
        v = u \times n
\]

\section{Question 2}
According to the requirement, we need a function that gets the new cordinate from our two vectors.

\begin{verbatim}
<<src/main.cpp>>=
#include <iostream>
#include "points.hpp"
#include "get_uvn.cpp"

using namespace std;

int main () {
  Point V1;
  Point V2;
  UVN uvn = get_uvn(V1, V2);

  return 0;
}
@
\end{verbatim}

here is the function:
\begin{verbatim}
<<src/get_uvn.cpp>>=
#include "points.hpp"

UVN get_uvn(Point V1, Point V2) {
  UVN result_uvn;

  return result_uvn;
}
@
\end{verbatim}

of course we need a nice header file to avoid complicated typedefs:
\begin{verbatim}
<<src/points.hpp>>=
#include "get_uvn.cpp"

typedef float Point[3];
typedef Point UVN[3];
@
\end{verbatim}

kere is the command to link these files:
\begin{verbatim}
<<compile.sh>>=
clang++ -o bin/a.out src/main.cpp src/get_uvn.cpp
@
\end{verbatim}

\end{document}
